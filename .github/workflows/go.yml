# Copyright (C) 2025  SUSUMU ONUMA
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
name: Go CI with Dev Container

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  devcontainer-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Dev Container CI
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            cd pocketbase
            go mod tidy
            go test ./...
            go build -o myapp

      - name: Upload Go App
        uses: actions/upload-artifact@v4
        with:
          name: go-app
          path: pocketbase/myapp

  deploy:
    needs: devcontainer-ci
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: go-app
          path: ./

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Adding Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        run: |
          set -e
          USERNAME=${{ secrets.SSH_USERNAME }}
          echo 'STEP1: chmod +x myapp'
          chmod +x myapp
          echo 'STEP2: mkdir -p on remote'
          ssh -p ${{ secrets.SSH_PORT || 22 }} $USERNAME@${{ secrets.SSH_HOST }} "mkdir -p /home/$USERNAME/pb"
          echo 'STEP3: scp myapp to remote'
          scp -P ${{ secrets.SSH_PORT || 22 }} myapp $USERNAME@${{ secrets.SSH_HOST }}:/home/$USERNAME/pb/
          echo 'STEP4: remote deploy commands'
          ssh -p ${{ secrets.SSH_PORT || 22 }} $USERNAME@${{ secrets.SSH_HOST }} "
            echo 'STEP4-1: kill old process if running'
            if pgrep -f '/home/$USERNAME/pb/myapp serve' > /dev/null; then
              pkill -f '/home/$USERNAME/pb/myapp serve'
            fi
            echo 'STEP4-2: move and chmod'
            mv /home/$USERNAME/pb/myapp /home/$USERNAME/pb/pocketbase
            chmod +x /home/$USERNAME/pb/pocketbase
            echo 'STEP4-3: start new process'
            nohup /home/$USERNAME/pb/pocketbase serve --dir /home/$USERNAME/pb > /home/$USERNAME/pb/pocketbase.log 2>&1 &
          "

